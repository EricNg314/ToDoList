
service: ToDoList

provider:
  name: aws
  runtime: nodejs8.10
  region: us-west-1
  environment:
    NOTES_TABLE: ${self:custom.tableName}
    AWS_DEPLOY_REGION: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["TaskTable", "Arn" ] }

        
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  createTask:
    handler: handler.createTask
    events:
      - http:
          path: /tasks/createTask
          method: post
          cors: true
  getAllTasks:
    handler: handler.getAllTasks
    events:
      - http:
          path: /tasks/all
          method: get
          cors: true
  updateTask:
    handler: handler.updateTask
    events:
      - http:
          path: /tasks/{taskId}
          method: patch
          cors: true
  deleteTask:
    handler: handler.deleteTask
    events:
      - http:
          path: /tasks/{taskId}
          method: delete
          cors: true



custom: 
  # Selects stage, else falls back onto self's provider stage.
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:custom.stage}-Task
  # Setting DynamoDB throughput for prod and default for all other non-prod stages.
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}


# Create our resources with separate templates
resources:
  # DynamoDB
  - ${file(resources/dynamodb-table.yml)}

